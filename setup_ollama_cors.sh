#!/bin/bash

# Ollama CORS Setup Script for Roam Copilot
# This script sets up persistent CORS configuration for Ollama to work with Roam Research

echo "üöÄ Setting up Ollama CORS for Roam Copilot..."

# Check if Ollama is installed
if ! command -v ollama &> /dev/null; then
    echo "‚ùå Ollama is not installed. Please install Ollama first: https://ollama.ai/"
    exit 1
fi

# Determine the current shell
SHELL_NAME=$(basename "$SHELL")
echo "üîç Detected shell: $SHELL_NAME"

# Function to add environment variable to shell config
add_to_shell_config() {
    local config_file="$1"
    local env_line='export OLLAMA_ORIGINS="https://roamresearch.com"'
    
    if [ -f "$config_file" ]; then
        # Check if the line already exists
        if grep -q "OLLAMA_ORIGINS.*roamresearch.com" "$config_file"; then
            echo "‚úÖ OLLAMA_ORIGINS already configured in $config_file"
        else
            echo "# Ollama CORS for Roam Copilot" >> "$config_file"
            echo "$env_line" >> "$config_file"
            echo "‚úÖ Added OLLAMA_ORIGINS to $config_file"
        fi
    else
        echo "# Ollama CORS for Roam Copilot" > "$config_file"
        echo "$env_line" >> "$config_file"
        echo "‚úÖ Created $config_file with OLLAMA_ORIGINS"
    fi
}

# Add to appropriate shell config file
case "$SHELL_NAME" in
    zsh)
        add_to_shell_config "$HOME/.zshrc"
        ;;
    bash)
        add_to_shell_config "$HOME/.bash_profile"
        add_to_shell_config "$HOME/.bashrc"
        ;;
    *)
        echo "‚ö†Ô∏è  Unknown shell: $SHELL_NAME"
        echo "Please manually add: export OLLAMA_ORIGINS=\"https://roamresearch.com\" to your shell config"
        ;;
esac

# Set environment variable for current session
export OLLAMA_ORIGINS="https://roamresearch.com"
echo "‚úÖ Set OLLAMA_ORIGINS for current session"

# Set environment variable for macOS launchctl (current session)
if [[ "$OSTYPE" == "darwin"* ]]; then
    launchctl setenv OLLAMA_ORIGINS "https://roamresearch.com"
    echo "‚úÖ Set OLLAMA_ORIGINS for macOS launchctl"
fi

# Create launchd plist file for persistent environment variable on macOS
if [[ "$OSTYPE" == "darwin"* ]]; then
    PLIST_FILE="$HOME/Library/LaunchAgents/com.ollama.environment.plist"
    
    cat > "$PLIST_FILE" << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.ollama.environment</string>
    <key>ProgramArguments</key>
    <array>
        <string>sh</string>
        <string>-c</string>
        <string>launchctl setenv OLLAMA_ORIGINS "https://roamresearch.com"</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    <key>KeepAlive</key>
    <false/>
</dict>
</plist>
EOF
    
    # Load the plist
    if launchctl load "$PLIST_FILE" 2>/dev/null; then
        echo "‚úÖ Created and loaded launchd plist for persistent OLLAMA_ORIGINS"
    else
        echo "‚ö†Ô∏è  launchd plist created but failed to load (this is common and usually not a problem)"
        echo "   The environment variable is still set in your shell config for terminal sessions"
        
        # Try alternative approach - bootstrap
        if launchctl bootstrap gui/$(id -u) "$PLIST_FILE" 2>/dev/null; then
            echo "‚úÖ Successfully bootstrapped launchd plist as alternative"
        else
            echo "‚ÑπÔ∏è  Note: System-wide persistence may require manual setup"
            
            # Create a simple startup script as backup
            STARTUP_SCRIPT="$HOME/.ollama_cors_startup.sh"
            cat > "$STARTUP_SCRIPT" << 'EOF'
#!/bin/bash
# Auto-generated by Roam Copilot setup script
export OLLAMA_ORIGINS="https://roamresearch.com"
launchctl setenv OLLAMA_ORIGINS "https://roamresearch.com" 2>/dev/null || true
EOF
            chmod +x "$STARTUP_SCRIPT"
            
            # Add to shell profile to run on login
            if ! grep -q "ollama_cors_startup.sh" "$HOME/.zshrc" 2>/dev/null; then
                echo "" >> "$HOME/.zshrc"
                echo "# Auto-run Ollama CORS setup" >> "$HOME/.zshrc"
                echo "[ -f ~/.ollama_cors_startup.sh ] && source ~/.ollama_cors_startup.sh" >> "$HOME/.zshrc"
            fi
            
            echo "‚úÖ Created backup startup script for additional reliability"
        fi
    fi
fi

# Function to restart Ollama
restart_ollama() {
    echo "üîÑ Restarting Ollama..."
    
    # Try to stop Ollama gracefully
    if pgrep -f "ollama serve" > /dev/null; then
        pkill -f "ollama serve"
        sleep 2
    fi
    
    # Kill any remaining Ollama processes
    pkill -f ollama 2>/dev/null || true
    sleep 1
    
    # Start Ollama in background
    ollama serve > /dev/null 2>&1 &
    sleep 3
    
    # Check if Ollama is running
    if curl -s http://localhost:11434/ > /dev/null; then
        echo "‚úÖ Ollama restarted successfully"
    else
        echo "‚ö†Ô∏è  Ollama may not be running. Please start it manually with: ollama serve"
    fi
}

# Ask user if they want to restart Ollama
read -p "ü§î Do you want to restart Ollama now? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    restart_ollama
else
    echo "‚ö†Ô∏è  Please restart Ollama manually for changes to take effect"
fi

# Verify CORS configuration
echo "üîç Verifying CORS configuration..."
sleep 2

if curl -s -X OPTIONS http://localhost:11434 \
     -H "Origin: https://roamresearch.com" \
     -H "Access-Control-Request-Method: POST" -I | grep -q "Access-Control-Allow-Origin"; then
    echo "‚úÖ CORS configuration verified successfully!"
else
    echo "‚ö†Ô∏è  CORS verification failed. Please check if Ollama is running and try again."
fi

echo ""
echo "üéâ Setup complete! Summary:"
echo "   - Environment variable added to shell config"
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "   - launchd plist created for persistent configuration"
fi
echo "   - OLLAMA_ORIGINS set to: https://roamresearch.com"
echo ""
echo "üìù Next steps:"
echo "   1. Open Roam Research"
echo "   2. Configure Roam Copilot settings with: http://localhost:11434"
echo "   3. Start chatting with your local models!"
echo ""
echo "üîÑ To apply shell config changes, run: source ~/.${SHELL_NAME}rc" 